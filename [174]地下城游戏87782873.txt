/**
 * @param {number[][]} dungeon
 * @return {number}
 */
var calculateMinimumHP = function(dungeon) {
    //dp[i][j] 表示当前再（i， j）位置所需要的最低初始健康值
    let m = dungeon.length
    let n = dungeon[0].length
    let dp = Array.from(new Array(m + 1), () => new Array(n + 1).fill(Infinity))
    dp[m][n - 1] = 1
    dp[m - 1][n] = 1

    for (let i = m - 1; i >= 0; i--) {
        for (let j = n - 1; j >= 0; j--) {
            //到达下一个点肯定是最小
            //dp[i，j]表示剩余健康值
            dp[i][j] = Math.max(Math.min(dp[i + 1][j], dp[i][j + 1]) - dungeon[i][j], 1)
        }
    }

    return dp[0][0]
}

//runtime:64 ms
//memory:36.1 MB
