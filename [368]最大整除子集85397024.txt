/**
 * @param {number[]} nums
 * @return {number[]}
 */
var largestDivisibleSubset = function(nums) {
    if(nums.length==0 || nums.length==1) return nums
    let res = []
    nums.sort((a,b)=>a-b)
    let dp = new Array(nums.length+1).fill(1)
    let max = 1
    let index = 0

    for(let i=1; i<nums.length; i++){
        for(let j=0; j<i; j++){
            if(nums[i]%nums[j]==0) dp[i] = Math.max(dp[i], dp[j]+1) 
        }
        if(dp[i]>max){
            max = dp[i]
            index = i
        }
    }
    for(let i=index; i>=0; i--){
        if(nums[index]%nums[i]==0 && dp[i]==max){
            res.unshift(nums[i])
            index = i
            max --
        }
    }

    return res
};
//runtime:92 ms
//memory:36.6 MB
