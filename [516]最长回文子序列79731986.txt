/**
 * @param {string} s
 * @return {number}
 */
var longestPalindromeSubseq = function(s) {
    if(s.length==0 || s.length==1) return s.length
    let dp = Array.from(new Array(s.length+1), ()=> new Array(s.length+1).fill(0))
    dp[0][0] = 0

    for(let i=s.length-2; i>=0; i--){
        dp[i][i] = 1
        for(let j = i+1; j<s.length; j++){
            if(s[i]==s[j]){
                dp[i][j] = dp[i+1][j-1] + 2
            }else{
                dp[i][j] = Math.max(dp[i+1][j], dp[i][j-1])
            }
        }
    }
    return dp[0][s.length-1]
};
//runtime:184 ms
//memory:65.4 MB
