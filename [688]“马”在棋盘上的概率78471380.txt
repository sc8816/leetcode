/**
 * @param {number} N
 * @param {number} K
 * @param {number} r
 * @param {number} c
 * @return {number}
 */
var knightProbability = function(N, K, r, c) {
    if(N==0) return 0
    let dp = new Array(N+4)
    for(let i=0; i<N+4; i++){
        dp[i] = new Array(N+4)
        for(let j=0;j<N+4;j++){
            dp[i][j] = new Array(K+1).fill(0)
            if ((i) >= 2 && (i) <= N + 1 && (j)>= 2 && (j) <= N + 1) {
				dp[i][j][0] = 1;
			}
			else {
				dp[i][j][0] = 0;
			}
        }
    }
    for(let k=1; k<=K; k++){
        for(let i=2;i<=N+1; i++){
            for(let j=2; j<=N+1; j++){
                dp[i][j][k] = (dp[i-2][j-1][k-1]+dp[i-2][j+1][k-1]
                                +dp[i+2][j-1][k-1]+dp[i+2][j+1][k-1]
                                +dp[i-1][j+2][k-1]+dp[i-1][j-2][k-1]
                                +dp[i+1][j+2][k-1]+dp[i+1][j-2][k-1])/8
            }
        }
    }

    return dp[r+2][c+2][K]
};
//runtime:96 ms
//memory:38 MB
