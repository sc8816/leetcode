/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {number} n
 * @return {TreeNode[]}
 */
var generateTrees = function(n) {
    if(n==0) return []
    let build = (start, end)=> {
        let res = []
        if(start>end) {
            res.push(null)
            return res
        }
        for(let i=start; i<=end; i++){
            let left = build(start, i-1)
            let right = build(i+1, end)
            for(let l of left){
                for(let r of right){
                    let node = new TreeNode(i)
                    node.left = l
                    node.right = r
                    res.push(node)
                }
            }
        }
        return res
    }

    return build(1, n)
};
//runtime:100 ms
//memory:39.1 MB
